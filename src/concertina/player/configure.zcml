<configure
    xmlns="http://namespaces.zope.org/zope"
    xmlns:genericsetup="http://namespaces.zope.org/genericsetup"
    xmlns:i18n="http://namespaces.zope.org/i18n"
    xmlns:plone="http://namespaces.plone.org/plone"
    xmlns:browser="http://namespaces.zope.org/browser"
    i18n_domain="concertina.player">

  <i18n:registerTranslations directory="locales" />

  <!--
    Be careful if you use general includeDependencies, it can have sideffects!
    Better import explicite packages or configurations ;)
  -->
  <!--<includeDependencies package="." />-->

  <include package=".browser" />

  <include file="permissions.zcml" />

  <include file="upgrades.zcml" />

  <genericsetup:registerProfile
      name="default"
      title="concertina.player"
      directory="profiles/default"
      description="Installs the concertina.player add-on."
      provides="Products.GenericSetup.interfaces.EXTENSION"
      post_handler=".setuphandlers.post_install"
      />

  <genericsetup:registerProfile
      name="uninstall"
      title="concertina.player (uninstall)"
      directory="profiles/uninstall"
      description="Uninstalls the concertina.player add-on."
      provides="Products.GenericSetup.interfaces.EXTENSION"
      post_handler=".setuphandlers.uninstall"
      />

  <utility
      factory=".setuphandlers.HiddenProfiles"
      name="concertina.player-hiddenprofiles"
      />

  <!-- -*- extra stuff goes here -*- -->
  <!-- Control panel -->
  <browser:page
    name="concertina-player-config"
    for="Products.CMFPlone.interfaces.IPloneSiteRoot"
    class=".controlpanel.IMareetradTraderSettingsFormControlPanel"
    permission="cmf.ManagePortal"
    />
  <!--  got from dexterity.membrane.behavior.user -->
  <plone:behavior
      title="Player Name from full name"
      description="Use the player full name as name (basis for the id)"
      provides="concertina.player.content.musicplayer.IMusicPlayerNameFromFullName"
      factory="dexterity.membrane.behavior.user.NameFromFullName"
      for="concertina.player.content.musicplayer.IMusicPlayer"
      />

<!-- a player can subscribe by itself -->
  <!-- musicplayer -->
  <adapter
        name="musicplayer"
	    for="Products.CMFCore.interfaces.IFolderish
	         zope.publisher.interfaces.browser.IDefaultBrowserLayer
	         plone.dexterity.interfaces.IDexterityFTI"
	    provides="zope.publisher.interfaces.browser.IBrowserPage"
	    factory=".content.musicplayer.AddView"
    />
	<class class=".content.musicplayer.AddView">
	    <require
	        permission="zope2.View"
	        interface="zope.publisher.interfaces.browser.IBrowserPage"
	        />
	</class>
	<!--
	<browser:page
      name="view"
      for="mareetrad.trader.content.trader.ITrader"
      class="mareetrad.trader.content.trader.View"
      template="content/trader_view.pt"
      permission="zope2.View"
      />
      -->
    <adapter factory=".content.musicplayer.QueryFormAdapter"/>
    <browser:page
      name="subscribe"
      for="*"
      class=".content.musicplayer.subscribeForm"
      permission="zope2.View"
      />

<!-- see https://github.com/sithmel/Products.Maps/blob/master/Products/Maps/configure.zcml -->
<!--  see plone.formwidget.geolocation.widget.py -->
  <browser:page
  	name="maps_configuration"
  	for="*"
  	class=".maps_configuration.mapConfiguration"
  	permission="zope2.View"
  />
  <!-- Events -->
  <subscriber
    for="concertina.player.content.musicplayer.IMusicPlayer
    	 zope.lifecycleevent.IObjectAddedEvent"
    handler="concertina.player.events.setMusicplayerRegistrationDate"
    />
  <subscriber
    for="concertina.player.content.musicplayer.IMusicPlayer
    	 zope.lifecycleevent.IObjectAddedEvent"
    handler="concertina.player.events.sendNotification"
    />
  <subscriber
    for="concertina.player.content.musicplayer.IMusicPlayer
    	 zope.lifecycleevent.IObjectAddedEvent"
    handler="concertina.player.events.sendConfirmation"
    />
  <!-- utilities -->
  <utility component=".vocabulary.Instruments" name="player.instruments" />
  <utility component=".vocabulary.Musics" name="player.musics" />

</configure>
